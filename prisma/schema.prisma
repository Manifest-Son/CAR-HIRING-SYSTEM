// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  userId String @id @default(uuid())
  firstname String @map("first_name")
  lastname String @map("last_name")
  email String
  password String
  userImg String @map("profile_img")
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model Drivers{
  driverId String @id @default(uuid())
  firstname String @map("first_name")
  lastname String @map("last_name")
  email String
  phoneno Int
  driverImg String @map("driver_img")
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model Booking{
  bookId String @id @default(uuid())
  bookVehicle String @map("vehicle_booking")
  bookPrice String @map("booking_price")
  bookUser String @map("user_booking")
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model Categories{
  catId String @id @default(uuid())
  catName String @map("category_name")
  catDescription String @map("category_description")
  catPrice Float @map("category_price")
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model Payment{
  payId String @id @default(uuid())
  payMethod String @map("payment_method")
  payConfirmation String @map("payment_details")
  payCancelation String @map("payment_cancel")
  userPay Float @map("user_payment")
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model Vehicle{
  vehId String @id @default(uuid())
  vehName String @map("vehicle_inquiry")
  vehImg String @map("vehicle_img")
  vehCategory String @map("vehicle_category")
  vehStatus Boolean @map("availability")
  vehPrice Float @map("hire_price")
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model Inquiry{
  inqId String @id @default(uuid())
  firstname String @map("first_name")
  lastname String @map("last_name")
  phoneNo Int @map("phone_no")
  email String 
  hire String
  date DateTime @db.Date
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}